names_to = "Gene",
values_to = "Proportion")
heatmap_Serotype <- ggplot(df_Serotype, aes(x = Gene, y = as.factor(Serotype), fill = Proportion)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "yellow3") +
labs(title = "Proportion of Resistance Genes by Serotype", y = "Serotype", x = "Resistance Gene", fill = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Distribution per ICU
df_ICU <- data_clean |>
group_by(ICU) |>
summarise(ANT6IA = mean(Res_Gene.ANT6IA == 1),
APH3III = mean(Res_Gene.APH3III == 1),
TETM = mean(Res_Gene.TETM == 1),
TETO = mean(Res_Gene.TETO == 1),
ERMA = mean(Res_Gene.ERMA == 1),
ERMB = mean(Res_Gene.ERMB == 1),
ERMT = mean(Res_Gene.ERMT == 1),
MEFA = mean(Res_Gene.MEFA == 1),
MSRD = mean(Res_Gene.MSRD == 1)) |>
pivot_longer(cols = -ICU,
names_to = "Gene",
values_to = "Proportion")
heatmap_ICU <- ggplot(df_ICU, aes(x = Gene, y = as.factor(ICU), fill = Proportion)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "darkred") +
labs(title = "Proportion of Resistance Genes by ICU", y = "ICU", x = "Resistance Gene", fill = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Distribution per Meningitis
df_Meningitis <- data_clean |>
group_by(Meningitis) |>
summarise(ANT6IA = mean(Res_Gene.ANT6IA == 1),
APH3III = mean(Res_Gene.APH3III == 1),
TETM = mean(Res_Gene.TETM == 1),
TETO = mean(Res_Gene.TETO == 1),
ERMA = mean(Res_Gene.ERMA == 1),
ERMB = mean(Res_Gene.ERMB == 1),
ERMT = mean(Res_Gene.ERMT == 1),
MEFA = mean(Res_Gene.MEFA == 1),
MSRD = mean(Res_Gene.MSRD == 1)) |>
pivot_longer(cols = -Meningitis,
names_to = "Gene",
values_to = "Proportion")
heatmap_Meningitis <- ggplot(df_Meningitis, aes(x = Gene, y = as.factor(Meningitis), fill = Proportion)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "darkred") +
labs(title = "Proportion of Resistance Genes by Meningitis", y = "Meningitis", x = "Resistance Gene", fill = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Join
library(patchwork)
heatmap <- (heatmap_year) |(heatmap_Serotype /  heatmap_CC) | (heatmap_ICU / heatmap_Meningitis )
# Identify potential confounders:
# data_clean_ICU_OR <- data_clean |> filter(days_at_dx <= 365)
# ## Age Categorical
# chisq.test(data_clean_ICU_OR $ICU, data_clean_ICU_OR$Age_cat)
# ## Age Continuous (Days at Dx)
# ### Test Association between Age and Outcome
# wilcox.test(days_at_dx ~ Admission_loc, data = data_clean_ICU_OR)
# Age_ICU_mod <- glm(ICU ~ days_at_dx, data = data_clean_ICU_OR, family = binomial)
# summary(Age_ICU_mod)
# ### check distribution
# data_clean_ICU_OR |>
#   ggplot()+
#   geom_histogram(aes(x=days_at_dx))+
#   facet_grid(ICU ~.)
# ### Show median + IQR
# data_clean_ICU_OR |>
#   group_by(Admission_loc)|>
#   summarise(median_age= paste0(median(days_at_dx), " (IQR:",quantile(days_at_dx, 0.05), ";", quantile(days_at_dx, 0.95), ")"))
# ### Test Association between Age and Exposures
# Age_ICU_mod <- glm(ICU ~ days_at_dx, data = data_clean_ICU_OR, family = binomial)
# get_OR <- function(risk_factor) {
#   risk_factor_col <- data_clean_ICU_OR[[risk_factor]]
#   coef(summary(glm(ICU ~ risk_factor_col, data = data_clean_ICU_OR, family = binomial)))[2,4]
# }
#
# risk_factors <- colnames(data_clean_ICU_OR |> select(contains(c("Surface_protein.", "Virulence_Gene."))))
#
# results <- lapply(risk_factors, get_OR)
# get_OR(risk_factors[1])
# get_OR(risk_factors[2])
# get_OR(risk_factors[3])
# get_OR(risk_factors[4])
# get_OR(risk_factors[5])
# get_OR(risk_factors[6])
# get_OR(risk_factors[7])
# get_OR(risk_factors[8])
# get_OR(risk_factors[9])
# get_OR(risk_factors[10])
# get_OR(risk_factors[11])
# get_OR(risk_factors[12])
# get_OR(risk_factors[13])
#
# ## CC
# chisq.test(data_clean_ICU_OR $ICU, data_clean_ICU_OR$CC)
# ## ST
# chisq.test(data_clean_ICU_OR $ICU, data_clean_ICU_OR$ST)
# ## Serotype
# chisq.test(data_clean_ICU_OR $ICU, data_clean_ICU_OR$Serotype)
# summary(glm(ICU ~ Serotype, data = data_clean_ICU_OR, family = binomial))
# ## Meningitis
# chisq.test(data_clean_ICU_OR $ICU, data_clean_ICU_OR$Meningitis)
# Meningitis_ICU_mod <- glm(ICU ~ Meningitis, data = data_clean_ICU_OR, family = binomial)
# summary(Meningitis_ICU_mod)
# Function
calculate_or <- function(df, risk_factor) {
# Ensure that risk_factor is treated as a column from the data_cleanframe
risk_factor_col <- df[[risk_factor]]
# Create a 2x2 table of ICU vs. Other by the risk factor
ICU <- sum(df |> filter(ICU == 1) |> pull(risk_factor))
Other <- sum(df |> filter(ICU == 0) |> pull(risk_factor))
# Logistic Regression
log_reg <- glm(ICU ~ risk_factor_col, data = df, family = binomial)
log_reg_summary <- coef(summary(log_reg))
# Extract Odds Ratio (exponentiate the coefficient) and Confidence Intervals
or_value <- exp(log_reg_summary[2, 1])
ci_lower <- exp(log_reg_summary[2, 1] - 1.96 * log_reg_summary[2, 2])
ci_upper <- exp(log_reg_summary[2, 1] + 1.96 * log_reg_summary[2, 2])
# Extract P-value
p_value <- round(log_reg_summary[2, 4],3)
# Return the formatted OR, CI, and P-value
data.frame(
Risk_Factor = risk_factor,
"ICU (n=31)" = ICU,
"Other (n=39)" = Other,
"OR (95% CI)" = sprintf("%.2f (%.2f - %.2f)", or_value, ci_lower, ci_upper),
"P-value" = p_value
)
}
# List of risk factors to test
risk_factors <- colnames(data_clean |>
select(contains(c("Surface_protein.", "Virulence_Gene.")))|>
select(-Surface_protein.Sip))
# Calculate OR, CI, and P-value for each risk factor
results <- lapply(risk_factors, calculate_or, df = data_clean_ICU_OR)
# Age distribution of Serotypes
Age_Sero_df <- data_clean |>
mutate(Age_cat = factor(Age_cat, levels = c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"))) |>
group_by(Serotype, Age_cat) |>
summarise(N = n(), .groups = "drop") |>
pivot_wider(names_from = Age_cat, values_from = N) |>
select(Serotype, "EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults")|>
replace_na(list("EOD" = 0, "LOD" = 0, "VLOD" = 0, "Older Children (1-18 years)" = 0, "Adults" = 0))|>
mutate(across(c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"), ~ paste(., " (", round(. / sum(.) * 100), "%)", sep="")))
# Age distribution of CCs
Age_CC_df <- data_clean |>
mutate(Age_cat = factor(Age_cat, levels = c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"))) |>
group_by(CC, Age_cat) |>
summarise(N = n(), .groups = "drop") |>
pivot_wider(names_from = Age_cat, values_from = N) |>
select(CC, "EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults")|>
replace_na(list("EOD" = 0, "LOD" = 0, "VLOD" = 0, "Older Children (1-18 years)" = 0, "Adults" = 0))|>
mutate(across(c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"), ~ paste(., " (", round(. / sum(.) * 100), "%)", sep="")))
# Join for final table
Age_Sero_CC_df <- rbind(Age_Sero_df |> rename("group"="Serotype"),Age_CC_df|> rename("group"="CC"))
Age_Sero_CC_df
Sero_df_infant <- data_clean |>
filter(infant ==1) |>
group_by(Serotype)|>
summarise(N_p= n())|>
mutate(N_p= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))
Age_Sero_df
Sero_df
# distribution of Serotypes
Sero_df <- data_clean |>
group_by(Serotype)|>
summarise(N_p= n())|>
mutate(N_p= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))
Sero_df
Sero_df_infant <- data_clean |>
filter(infant ==1) |>
group_by(Serotype)|>
summarise(N_p= n())|>
mutate("Total Infants"= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))|>
select(-N_p)
Sero_df_infant
cbind(Age_Sero_df, Sero_df_infant, Sero_df)
left_join(left_join(Age_Sero_df, Sero_df_infant), Sero_df)
# Join everything
Age_Sero_df_FINAL <- left_join(left_join(Age_Sero_df, Sero_df_infant), Sero_df)
# distribution of Serotypes Overall
Sero_df <- data_clean |>
group_by(Serotype)|>
summarise(N_p= n())|>
mutate("Total"= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))|>
select(-N_p)
# distribution of Serotypes in infants
Sero_df_infant <- data_clean |>
filter(infant ==1) |>
group_by(Serotype)|>
summarise(N_p= n())|>
mutate("Total Infants"= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))|>
select(-N_p)
# Age distribution of Serotypes
Age_Sero_df <- data_clean |>
mutate(Age_cat = factor(Age_cat, levels = c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"))) |>
group_by(Serotype, Age_cat) |>
summarise(N = n(), .groups = "drop") |>
pivot_wider(names_from = Age_cat, values_from = N) |>
select(Serotype, "EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults")|>
replace_na(list("EOD" = 0, "LOD" = 0, "VLOD" = 0, "Older Children (1-18 years)" = 0, "Adults" = 0))|>
mutate(across(c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"), ~ paste(., " (", round(. / sum(.) * 100), "%)", sep="")))
# Join everything
Age_Sero_df_FINAL <- left_join(left_join(Age_Sero_df, Sero_df_infant), Sero_df)
Age_Sero_df_FINAL
Age_Sero_df_FINAL
# Join everything
Age_Sero_df_FINAL <- left_join(left_join(Age_Sero_df, Sero_df_infant), Sero_df) |>
mutate(Serotype= factor(Serotype, levels= c("Ia", "Ib", "II", "III","IV","V")))
Age_Sero_df_FINAL
# Join everything
Age_Sero_df_FINAL <- left_join(left_join(Age_Sero_df, Sero_df_infant), Sero_df) |>
mutate(Serotype= factor(Serotype, levels= c("Ia", "Ib", "II", "III","IV","V")))|>
arrange(Serotype)
Age_Sero_df_FINAL
left_join(left_join(Age_CC_df, CC_df_infant), CC_df)
# Join everything
Age_Sero_df_FINAL <- left_join(left_join(Age_Sero_df, Sero_df_infant), Sero_df) |>
mutate(Serotype= factor(Serotype, levels= c("Ia", "Ib", "II", "III","IV","V")))|>
arrange(Serotype)
Age_Sero_df_FINAL
# distribution of CCs Overall
CC_df <- data_clean |>
group_by(CC)|>
summarise(N_p= n())|>
mutate("Total"= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))|>
select(-N_p)
# distribution of CCs in infants
CC_df_infant <- data_clean |>
filter(infant ==1) |>
group_by(CC)|>
summarise(N_p= n())|>
mutate("Total Infants"= paste0(N_p, " (",round(100*(N_p/sum(N_p)),1), "%)"))|>
select(-N_p)
# Age distribution of CCs
Age_CC_df <- data_clean |>
mutate(Age_cat = factor(Age_cat, levels = c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"))) |>
group_by(CC, Age_cat) |>
summarise(N = n(), .groups = "drop") |>
pivot_wider(names_from = Age_cat, values_from = N) |>
select(CC, "EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults")|>
replace_na(list("EOD" = 0, "LOD" = 0, "VLOD" = 0, "Older Children (1-18 years)" = 0, "Adults" = 0))|>
mutate(across(c("EOD", "LOD", "VLOD","Older Children (1-18 years)", "Adults"), ~ paste(., " (", round(. / sum(.) * 100), "%)", sep="")))
left_join(left_join(Age_CC_df, CC_df_infant), CC_df)
# Clean environment
rm( list = ls() )
# load libraries
library(xlsx)
library(tidyverse)
# load data
setwd("~/GitHub/BCH-GBS/0.Raw_Data")
metadata <- read.xlsx("GBS_mastersheet_LC.xlsx", sheetIndex = 1)
# CLEAN DATA
# Keep only columns of interest
metadata_clinical <- metadata |>
select(ID, Source, Same_patient, Date.of.cx, DOB, Admitted.to, Penicillin, Vancomycin, Erhthromycin, Clindamycin, WBC, Hb, platelet, ANC, ALC)|>
rename("Erythromycin"="Erhthromycin", "isolated_from"= "Source", "Admission_loc"="Admitted.to")|>
mutate(Date.of.cx= as.Date(Date.of.cx, "%d%b%Y"))|>
mutate(days_at_dx= as.numeric(Date.of.cx - DOB))|>
mutate(ID_number= as.numeric(sub("_.*", "", ID)))|>
mutate(Hb= as.numeric(Hb),
WBC= as.numeric(WBC),
platelet= as.numeric(platelet),
ANC= as.numeric(ANC),
ALC= as.numeric(ALC))|>
mutate(Clindamycin = ifelse(Clindamycin=="I", "i", Clindamycin))
# Remove patient duplicates
metadata_clinical_unique <- metadata_clinical |>
filter(Same_patient == "No")
metadata_clinical_Same <- metadata_clinical |>
filter(Same_patient == "Yes")|>
filter(ID %in% c("41_S41", "48_S48", "59_S59", "67_S67", "70_S70", "73_S73", "77_S77", "92_S92", "95_S95"))|>
mutate(isolated_from="blood; csf")
metadata_clinical_V2 <- rbind(metadata_clinical_unique, metadata_clinical_Same)|>
select(-Same_patient)
# Clean
metadata_clinical_V3 <- metadata_clinical_V2 |>
mutate(isolated_from = ifelse(isolated_from %in% c("Bld CVL", "Bld Ven", "blood", "Blood"), "blood",
ifelse(isolated_from %in% c("csf", "CSF"), "csf", isolated_from)))|>
mutate(Admission_loc = ifelse(grepl("ICU", Admission_loc), "ICU", "other"))
# Add Age Group
metadata_clinical_V4 <- metadata_clinical_V3|>
mutate(days_at_dx = ifelse(ID_number==74, 8321, days_at_dx))|>
mutate(Age_cat = ifelse(days_at_dx<7, "EOD",
ifelse(days_at_dx<= 89, "LOD",
ifelse(days_at_dx<= 365, "VLOD",
ifelse(days_at_dx<= (365*18) , "Older Children (1-18 years)", "Adults")))))|>
mutate(infant= ifelse(days_at_dx <=365, 1, 0))
# Add laboratory and clinical diagnostics
metadata_clinical_V5 <- metadata_clinical_V4|>
mutate(Neutropenia= ifelse(as.numeric(ANC)*1000 < 1500, 1, 0),
Leukocytosis= ifelse(as.numeric(ALC) *1000 > 10500, 1, 0),
Leukopenia= ifelse(as.numeric(ALC)*1000 < 3500, 1, 0))|>
mutate(Meningitis= ifelse(isolated_from == "blood", 0, 1))
# load data
setwd("~/GitHub/BCH-GBS/1. Bioinformatic_Analysis/Outputs")
## Surface proteins
Surface_protein_df <- read.delim("BCH_GBS_surface_protein.txt") |>
mutate(Sample_id = as.numeric(str_split(Sample_id, "_", simplify = T)[,1])) |>
rename("ID_number"="Sample_id")
colnames(Surface_protein_df)[-1] <- paste0("Surface_protein.", colnames(Surface_protein_df)[-1])
## Resistance Genes
Res_Genes_df <- read.delim("BCH_GBS_Resistance_Genes.txt")|>
mutate(Sample_id = as.numeric(str_split(Sample_id, "_", simplify = T)[,1])) |>
rename("ID_number"="Sample_id")|>
select(where(~ !all(. == "neg")), !ANT6IA3KF864551, TETO32O )
colnames(Res_Genes_df)[-c(1,2)] <- paste0("Res_Gene.", colnames(Res_Genes_df)[-c(1,2)])
## Resistance Mutations
Res_MUTs_df <- read.delim("BCH_GBS_Resistance_MUTS.txt") |>
mutate(Sample_id = as.numeric(str_split(Sample_id, "_", simplify = T)[,1])) |>
rename("ID_number"="Sample_id")
colnames(Res_MUTs_df)[-1] <- paste0("Res_MUT.", colnames(Res_MUTs_df)[-1])
## Serotype
Serotype_df <- read.delim("BCH_GBS_serotype.txt") |>
mutate(Sample = parse_number(str_remove(Sample, "_trimmed")),
GBS.SBG = str_remove(GBS.SBG, "GBS-SBG:")) |>
rename("ID_number"="Sample", "serotype"="GBS.SBG")
## ST
mlst_df <- read.delim("BCH_GBS_mlst.txt") |>
mutate(Sample = parse_number(str_remove(Sample, "_trimmed"))) |>
rename("ID_number"="Sample")
colnames(mlst_df)[3:ncol(mlst_df)] <- paste("ST_info.",colnames(mlst_df)[3:ncol(mlst_df)], sep="")
## CC
CC_df <- read.delim("BCH_GBS_CC.txt", sep=",") |>
mutate(Sample = parse_number(str_remove(Sample, "_trimmed")),
clonal_complex = parse_number(clonal_complex)) |>
rename("ID_number"="Sample", "CC"="clonal_complex")
## Virulence Genes
Virulence_genes_df <- read.delim("summary_vfdb_filtered.tab") |>
mutate(X.FILE = parse_number(str_split(str_split(X.FILE, "/", simplify = T)[,9], "_", simplify = T)[,1]))|>
rename("ID_number"="X.FILE", "cfa_cfb" ="cfa.cfb")|>
select(ID_number, lmb, scpB, hylB, fbsB)|>
mutate(across(-ID_number, ~ ifelse(. == ".", 0, 1)))
colnames(Virulence_genes_df)[-1] <- paste0("Virulence_Gene.", colnames(Virulence_genes_df)[-1])
## SIP gene
SIP_gene_df <- read.delim("summary_sip_gene.tab") |>
mutate(X.FILE = parse_number(str_split(str_split(X.FILE, "/", simplify = T)[,9], "_", simplify = T)[,1]))|>
rename("ID_number"="X.FILE")|>
select(-NUM_FOUND)|>
mutate(across(-ID_number, ~ ifelse(. == ".", 0, 1)))|>
mutate(Sip = Sip.1a + Sip.3a)
colnames(SIP_gene_df)[-1] <- paste0("Surface_protein.", colnames(SIP_gene_df)[-1])
# Join to metadata
meta_Genomic_data <- left_join(left_join(left_join(left_join(left_join(left_join(left_join(metadata_clinical_V5, Surface_protein_df),
Res_Genes_df),
Res_MUTs_df),
mlst_df),
CC_df),
Virulence_genes_df),
SIP_gene_df)|>
mutate(across(c(colnames(Surface_protein_df)[-1], colnames(Res_Genes_df)[-c(1,2)]), ~ ifelse(.=="neg", 0, 1)))|>
mutate(across(colnames(Res_MUTs_df)[-1], ~ ifelse(.=="*", "0", Res_MUTs_df)))|>
mutate(CC= ifelse(ID =="11_S11", 23,CC))|>
mutate(CC= ifelse(ID =="47_S47", 19,CC))|>
mutate(CC= ifelse(ID =="8_S8", 17,CC))
setwd("~/GitHub/BCH-GBS/2.Statistical_Analysis")
write.xlsx(meta_Genomic_data, "Clinical_Genomic_data.xlsx")
setwd("~/GitHub/BCH-GBS/2.Statistical_Analysis")
write.xlsx(meta_Genomic_data, "Clinical_Genomic_data.xlsx")
meta_Genomic_data
meta_Genomic_data$CC
metadata_clinical_V5$CC
CC_df
CC_df$CC
head(CC_df)
CC_df |>
mutate(CC= ifelse(ID_number  ==11, 23,CC))|>
mutate(CC= ifelse(ID_number  ==47, 19,CC))|>
mutate(CC= ifelse(ID_number  ==8, 17,CC))
CC_df
# Join to metadata
meta_Genomic_data <- left_join(left_join(left_join(left_join(left_join(left_join(left_join(metadata_clinical_V5, Surface_protein_df),
Res_Genes_df),
Res_MUTs_df),
mlst_df),
CC_df),
Virulence_genes_df),
SIP_gene_df)|>
mutate(across(c(colnames(Surface_protein_df)[-1], colnames(Res_Genes_df)[-c(1,2)]), ~ ifelse(.=="neg", 0, 1)))|>
mutate(across(colnames(Res_MUTs_df)[-1], ~ ifelse(.=="*", "0", Res_MUTs_df)))|>
mutate(CC= ifelse(ID_number  ==11, 23,CC))|>
mutate(CC= ifelse(ID_number  ==47, 19,CC))|>
mutate(CC= ifelse(ID_number  ==8, 17,CC))
setwd("~/GitHub/BCH-GBS/2.Statistical_Analysis")
write.xlsx(meta_Genomic_data, "Clinical_Genomic_data.xlsx")
# Clean environment
rm( list = ls() )
# load libraries
library(xlsx)
library(tidyverse)
# load data
setwd("~/GitHub/BCH-GBS/0.Raw_Data")
metadata <- read.xlsx("GBS_mastersheet_LC.xlsx", sheetIndex = 1)
# CLEAN DATA
# Keep only columns of interest
metadata_clinical <- metadata |>
select(ID, Source, Same_patient, Date.of.cx, DOB, Admitted.to, Penicillin, Vancomycin, Erhthromycin, Clindamycin, WBC, Hb, platelet, ANC, ALC)|>
rename("Erythromycin"="Erhthromycin", "isolated_from"= "Source", "Admission_loc"="Admitted.to")|>
mutate(Date.of.cx= as.Date(Date.of.cx, "%d%b%Y"))|>
mutate(days_at_dx= as.numeric(Date.of.cx - DOB))|>
mutate(ID_number= as.numeric(sub("_.*", "", ID)))|>
mutate(Hb= as.numeric(Hb),
WBC= as.numeric(WBC),
platelet= as.numeric(platelet),
ANC= as.numeric(ANC),
ALC= as.numeric(ALC))|>
mutate(Clindamycin = ifelse(Clindamycin=="I", "i", Clindamycin))
# Remove patient duplicates
metadata_clinical_unique <- metadata_clinical |>
filter(Same_patient == "No")
metadata_clinical_Same <- metadata_clinical |>
filter(Same_patient == "Yes")|>
filter(ID %in% c("41_S41", "48_S48", "59_S59", "67_S67", "70_S70", "73_S73", "77_S77", "92_S92", "95_S95"))|>
mutate(isolated_from="blood; csf")
metadata_clinical_V2 <- rbind(metadata_clinical_unique, metadata_clinical_Same)|>
select(-Same_patient)
# Clean
metadata_clinical_V3 <- metadata_clinical_V2 |>
mutate(isolated_from = ifelse(isolated_from %in% c("Bld CVL", "Bld Ven", "blood", "Blood"), "blood",
ifelse(isolated_from %in% c("csf", "CSF"), "csf", isolated_from)))|>
mutate(Admission_loc = ifelse(grepl("ICU", Admission_loc), "ICU", "other"))
# Add Age Group
metadata_clinical_V4 <- metadata_clinical_V3|>
mutate(days_at_dx = ifelse(ID_number==74, 8321, days_at_dx))|>
mutate(Age_cat = ifelse(days_at_dx<7, "EOD",
ifelse(days_at_dx<= 89, "LOD",
ifelse(days_at_dx<= 365, "VLOD",
ifelse(days_at_dx<= (365*18) , "Older Children (1-18 years)", "Adults")))))|>
mutate(infant= ifelse(days_at_dx <=365, 1, 0))
# Add laboratory and clinical diagnostics
metadata_clinical_V5 <- metadata_clinical_V4|>
mutate(Neutropenia= ifelse(as.numeric(ANC)*1000 < 1500, 1, 0),
Leukocytosis= ifelse(as.numeric(ALC) *1000 > 10500, 1, 0),
Leukopenia= ifelse(as.numeric(ALC)*1000 < 3500, 1, 0))|>
mutate(Meningitis= ifelse(isolated_from == "blood", 0, 1))
# load data
setwd("~/GitHub/BCH-GBS/1. Bioinformatic_Analysis/Outputs")
## Surface proteins
Surface_protein_df <- read.delim("BCH_GBS_surface_protein.txt") |>
mutate(Sample_id = as.numeric(str_split(Sample_id, "_", simplify = T)[,1])) |>
rename("ID_number"="Sample_id")
colnames(Surface_protein_df)[-1] <- paste0("Surface_protein.", colnames(Surface_protein_df)[-1])
## Resistance Genes
Res_Genes_df <- read.delim("BCH_GBS_Resistance_Genes.txt")|>
mutate(Sample_id = as.numeric(str_split(Sample_id, "_", simplify = T)[,1])) |>
rename("ID_number"="Sample_id")|>
select(where(~ !all(. == "neg")), !ANT6IA3KF864551, TETO32O )
colnames(Res_Genes_df)[-c(1,2)] <- paste0("Res_Gene.", colnames(Res_Genes_df)[-c(1,2)])
## Resistance Mutations
Res_MUTs_df <- read.delim("BCH_GBS_Resistance_MUTS.txt") |>
mutate(Sample_id = as.numeric(str_split(Sample_id, "_", simplify = T)[,1])) |>
rename("ID_number"="Sample_id")
colnames(Res_MUTs_df)[-1] <- paste0("Res_MUT.", colnames(Res_MUTs_df)[-1])
## Serotype
Serotype_df <- read.delim("BCH_GBS_serotype.txt") |>
mutate(Sample = parse_number(str_remove(Sample, "_trimmed")),
GBS.SBG = str_remove(GBS.SBG, "GBS-SBG:")) |>
rename("ID_number"="Sample", "serotype"="GBS.SBG")
## ST
mlst_df <- read.delim("BCH_GBS_mlst.txt") |>
mutate(Sample = parse_number(str_remove(Sample, "_trimmed"))) |>
rename("ID_number"="Sample")
colnames(mlst_df)[3:ncol(mlst_df)] <- paste("ST_info.",colnames(mlst_df)[3:ncol(mlst_df)], sep="")
## CC
CC_df <- read.delim("BCH_GBS_CC.txt", sep=",") |>
mutate(Sample = parse_number(str_remove(Sample, "_trimmed")),
clonal_complex = parse_number(clonal_complex)) |>
rename("ID_number"="Sample", "CC"="clonal_complex")
## Virulence Genes
Virulence_genes_df <- read.delim("summary_vfdb_filtered.tab") |>
mutate(X.FILE = parse_number(str_split(str_split(X.FILE, "/", simplify = T)[,9], "_", simplify = T)[,1]))|>
rename("ID_number"="X.FILE", "cfa_cfb" ="cfa.cfb")|>
select(ID_number, lmb, scpB, hylB, fbsB)|>
mutate(across(-ID_number, ~ ifelse(. == ".", 0, 1)))
colnames(Virulence_genes_df)[-1] <- paste0("Virulence_Gene.", colnames(Virulence_genes_df)[-1])
## SIP gene
SIP_gene_df <- read.delim("summary_sip_gene.tab") |>
mutate(X.FILE = parse_number(str_split(str_split(X.FILE, "/", simplify = T)[,9], "_", simplify = T)[,1]))|>
rename("ID_number"="X.FILE")|>
select(-NUM_FOUND)|>
mutate(across(-ID_number, ~ ifelse(. == ".", 0, 1)))|>
mutate(Sip = Sip.1a + Sip.3a)
colnames(SIP_gene_df)[-1] <- paste0("Surface_protein.", colnames(SIP_gene_df)[-1])
# Join to metadata
meta_Genomic_data <- left_join(left_join(left_join(left_join(left_join(left_join(left_join(metadata_clinical_V5, Surface_protein_df),
Res_Genes_df),
Res_MUTs_df),
mlst_df),
CC_df),
Virulence_genes_df),
SIP_gene_df)|>
mutate(across(c(colnames(Surface_protein_df)[-1], colnames(Res_Genes_df)[-c(1,2)]), ~ ifelse(.=="neg", 0, 1)))|>
mutate(across(colnames(Res_MUTs_df)[-1], ~ ifelse(.=="*", "0", Res_MUTs_df)))|>
mutate(CC= ifelse(ID_number  ==11, 23,CC))|>
mutate(CC= ifelse(ID_number  ==47, 19,CC))|>
mutate(CC= ifelse(ID_number  ==8, 17,CC))
setwd("~/GitHub/BCH-GBS/2.Statistical_Analysis")
write.xlsx(meta_Genomic_data, "Clinical_Genomic_data.xlsx")
# Join to metadata
meta_Genomic_data <- left_join(left_join(left_join(left_join(left_join(left_join(left_join(metadata_clinical_V5, Surface_protein_df),
Res_Genes_df),
Res_MUTs_df),
mlst_df),
CC_df),
Virulence_genes_df),
SIP_gene_df)|>
mutate(across(c(colnames(Surface_protein_df)[-1], colnames(Res_Genes_df)[-c(1,2)]), ~ ifelse(.=="neg", 0, 1)))|>
mutate(across(colnames(Res_MUTs_df)[-1], ~ ifelse(.=="*", "0", Res_MUTs_df)))
setwd("~/GitHub/BCH-GBS/2.Statistical_Analysis")
write.xlsx(meta_Genomic_data, "Clinical_Genomic_data.xlsx")
