Effect_size_pwr80_DBGWAS_Sid <- Effect_size_function(pw.thresh=0.8,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr70_DBGWAS_Sid <- Effect_size_function(pw.thresh=0.7,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr60_DBGWAS_Sid <- Effect_size_function(pw.thresh=0.6,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr50_DBGWAS_Sid <- Effect_size_function(pw.thresh=0.5,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_df_DBGWAS_Sid <- rbind(data.frame(MAF=f_seq, beta= Effect_size_pwr90_DBGWAS_Sid) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr80_DBGWAS_Sid) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr70_DBGWAS_Sid) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr60_DBGWAS_Sid) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr50_DBGWAS_Sid) |> mutate(power= "50%"))
# Prepare the data from DBGWAS_Fasttree
DBGWAS_Fasttree_Sid <- DBGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(DBGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for DBGWAS_Fasttree
geom_point(data = DBGWAS_Fasttree_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_df_DBGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_pwr90_PanGWAS_Bonf <- Effect_size_function(pw.thresh=0.9,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Bonferonni")
Effect_size_pwr80_PanGWAS_Bonf <- Effect_size_function(pw.thresh=0.8,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Bonferonni")
Effect_size_pwr70_PanGWAS_Bonf <- Effect_size_function(pw.thresh=0.7,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Bonferonni")
Effect_size_pwr60_PanGWAS_Bonf <- Effect_size_function(pw.thresh=0.6,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Bonferonni")
Effect_size_pwr50_PanGWAS_Bonf <- Effect_size_function(pw.thresh=0.5,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Bonferonni")
Effect_size_df_PanGWAS_Bonf <- rbind(data.frame(MAF=f_seq, beta= Effect_size_pwr90_PanGWAS_Bonf) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr80_PanGWAS_Bonf) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr70_PanGWAS_Bonf) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr60_PanGWAS_Bonf) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr50_PanGWAS_Bonf) |> mutate(power= "50%"))
# Prepare the data from PanGWAS_Fasttree
PanGWAS_Fasttree_Bonf <- PanGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(PanGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_Bonf, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_df_PanGWAS_Bonf, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_pwr90_PanGWAS_Sid <- Effect_size_function(pw.thresh=0.9,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr80_PanGWAS_Sid <- Effect_size_function(pw.thresh=0.8,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr70_PanGWAS_Sid <- Effect_size_function(pw.thresh=0.7,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr60_PanGWAS_Sid <- Effect_size_function(pw.thresh=0.6,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_pwr50_PanGWAS_Sid <- Effect_size_function(pw.thresh=0.5,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_df_PanGWAS_Sid <- rbind(data.frame(MAF=f_seq, beta= Effect_size_pwr90_PanGWAS_Sid) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr80_PanGWAS_Sid) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr70_PanGWAS_Sid) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr60_PanGWAS_Sid) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_pwr50_PanGWAS_Sid) |> mutate(power= "50%"))
# Prepare the data from PanGWAS_Fasttree
PanGWAS_Fasttree_Sid <- PanGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(PanGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_df_PanGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
# Loop over each set of cases and controls to calculate and plot power curves
Effect_size_function_lin <- function(pw.thresh, N, f, b_vals, sig, n_tests, correction){
pw = rep(NA, length(b_vals)) # Power at each candidate b
b.for.f = rep(NA, length(f)) # For each f, gives the b value that leads to target power
if(correction =="Bonferonni"){
p.threshold = sig / n_tests                # Genome-wide significance threshold w/ Bonferonni correction
}else{
if(correction =="Sidak"){
p.threshold = 1 - (1 - sig)^(1/n_tests)    # Genome-wide significance threshold w/ Sidak correction
}else{
p.threshold = sig                          # No correction
}
}
q = qchisq(p.threshold, df = 1, lower = F) # Chi-square value corresponding to significance threshold
for (i in 1:length(f)){
sigma = sqrt(1 - (2*f[i]*(1-f[i])*b_vals^2))
pw = pchisq(q, df = 1, ncp =  N * 2 * f[i] * (1 - f[i]) * (b_vals^2) / (sigma^2) , lower = F)
b.for.f[i] = b_vals[min(which(pw > pw.thresh))] # Find the effect size that achieves the target power
}
b.for.f
}
# error sd after SNP effect is accounted for (see next part for explanation)
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_Bonf, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_df_PanGWAS_Bonf, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_df_PanGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_pwr90_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.9,
N_cases= sum(phenotypes$binary == 1),
N_controls=sum(phenotypes$binary == 0),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_lin_pwr90_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.9,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr80_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.8,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr70_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.7,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr60_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.6,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr50_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.5,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_df_PanGWAS_Sid <- rbind(data.frame(MAF=f_seq, beta= Effect_size_lin_pwr90_PanGWAS_Sid) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr80_PanGWAS_Sid) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr70_PanGWAS_Sid) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr60_PanGWAS_Sid) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr50_PanGWAS_Sid) |> mutate(power= "50%"))
# Prepare the data from PanGWAS_Fasttree
PanGWAS_Fasttree_lin_Sid <- PanGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(PanGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_PanGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
# Loop over each set of cases and controls to calculate and plot power curves
Effect_size_function_lin <- function(pw.thresh, N, f, b_vals, sig, n_tests, correction){
pw = rep(NA, length(b_vals)) # Power at each candidate b
b.for.f = rep(NA, length(f)) # For each f, gives the b value that leads to target power
if(correction =="Bonferonni"){
p.threshold = sig / n_tests                # Genome-wide significance threshold w/ Bonferonni correction
}else{
if(correction =="Sidak"){
p.threshold = 1 - (1 - sig)^(1/n_tests)    # Genome-wide significance threshold w/ Sidak correction
}else{
p.threshold = sig                          # No correction
}
}
q = qchisq(p.threshold, df = 1, lower = F) # Chi-square value corresponding to significance threshold
for (i in 1:length(f)){
sigma = sqrt(1 - (2 * f[i] * (1 - f[i]) * (b_vals^2)))
pw = pchisq(q, df = 1, ncp =  N * 2 * f[i] * (1 - f[i]) * (b_vals^2) / (sigma^2) , lower = F)
b.for.f[i] = b_vals[min(which(pw > pw.thresh))] # Find the effect size that achieves the target power
}
b.for.f
}
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_lin_pwr90_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.9,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr80_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.8,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr70_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.7,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr60_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.6,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr50_PanGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.5,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(PanGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_df_PanGWAS_Sid <- rbind(data.frame(MAF=f_seq, beta= Effect_size_lin_pwr90_PanGWAS_Sid) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr80_PanGWAS_Sid) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr70_PanGWAS_Sid) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr60_PanGWAS_Sid) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr50_PanGWAS_Sid) |> mutate(power= "50%"))
# Prepare the data from PanGWAS_Fasttree
PanGWAS_Fasttree_lin_Sid <- PanGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(PanGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_PanGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
f_seq
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[i]) * (b_vals^2)))
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[1]) * (b_vals^2)))
seq(0, 2, length = 1000)
b_vals =seq(0, 2, length = 1000)
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[1]) * (b_vals[1]^2)))
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[1]) * (b_vals[0]^2)))
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[1]) * (b_vals[2]^2)))
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[1]) * (b_vals^2)))
sqrt(1 - (2 * f_seq[1] * (1 - f_seq[1]) * (b_vals[1]^2)))
sqrt(1 - (2 * f_seq * (1 - f_seq[1]) * (b_vals[1]^2)))
sqrt(1 - (2 * f_seq * (1 - f_seq) * (b_vals[1]^2)))
sqrt(1 - (2 * f_seq * (1 - f_seq) * (b_vals[1]^2)))
sqrt(1 - (2 * f[i] * (1 - f[i]) * (b_vals^2)))
sqrt(1 - (2 * f_seq * (1 - f_seq) * (b_vals[1]^2)))
sqrt(1 - (2 * f[i] * (1 - f[i]) * (b_vals^2)))
# PLOT
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_PanGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_lin_pwr90_SNPGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.9,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(SNPGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr80_SNPGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.8,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(SNPGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr70_SNPGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.7,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(SNPGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr60_SNPGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.6,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(SNPGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr50_SNPGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.5,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(SNPGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_df_SNPGWAS_Sid <- rbind(data.frame(MAF=f_seq, beta= Effect_size_lin_pwr90_SNPGWAS_Sid) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr80_SNPGWAS_Sid) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr70_SNPGWAS_Sid) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr60_SNPGWAS_Sid) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr50_SNPGWAS_Sid) |> mutate(power= "50%"))
# Prepare the data from SNPGWAS_Fasttree
SNPGWAS_Fasttree_lin_Sid <- SNPGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(SNPGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for SNPGWAS_Fasttree
geom_point(data = SNPGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_SNPGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
ggplot() +
# Plot points for SNPGWAS_Fasttree
geom_point(data = SNPGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_SNPGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
Effect_size_lin_pwr90_PanGWAS_Sid
ggplot() +
# Plot points for PanGWAS_Fasttree
geom_point(data = PanGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_PanGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
f_seq <- seq(0.01, 0.5, length = 200)
Effect_size_lin_pwr90_DBGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.9,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr80_DBGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.8,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr70_DBGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.7,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr60_DBGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.6,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_pwr50_DBGWAS_Sid <- Effect_size_function_lin(pw.thresh=0.5,
N = nrow(phenotypes),
f= f_seq,
b_vals =seq(0, 2, length = 1000),
sig=0.05,
n_tests = nrow(DBGWAS_Fasttree),
correction ="Sidak")
Effect_size_lin_df_DBGWAS_Sid <- rbind(data.frame(MAF=f_seq, beta= Effect_size_lin_pwr90_DBGWAS_Sid) |> mutate(power= "90%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr80_DBGWAS_Sid) |> mutate(power= "80%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr70_DBGWAS_Sid) |> mutate(power= "70%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr60_DBGWAS_Sid) |> mutate(power= "60%"),
data.frame(MAF=f_seq, beta= Effect_size_lin_pwr50_DBGWAS_Sid) |> mutate(power= "50%"))
# Prepare the data from DBGWAS_Fasttree
DBGWAS_Fasttree_lin_Sid <- DBGWAS_Fasttree |>
mutate(sig = ifelse(lrt.pvalue < 0.05 / nrow(DBGWAS_Fasttree), "sig", "not sig")) |>
mutate(MAF = ifelse(af <= 0.5, af, 1 - af))
# PLOT
ggplot() +
# Plot points for DBGWAS_Fasttree
geom_point(data = DBGWAS_Fasttree_lin_Sid, aes(x = MAF, y = exp(abs(beta)))) +
# Plot lines for Effect_size_df
geom_line(data = Effect_size_lin_df_DBGWAS_Sid, aes(x = MAF, y = exp(beta), colour = power)) +
# Customize labels and theme
xlab("Minor Allele Frequency (MAF)") +
ylab("EFFECT SIZE (in odds-ratio)") +
theme_bw()
nrow(phenotypes)
25*5
25*5*5
25*5*5*12
0.30*169.80
6575/2
